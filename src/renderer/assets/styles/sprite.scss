// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$add-file-name: 'add-file';
$add-file-x: 0px;
$add-file-y: 0px;
$add-file-offset-x: 0px;
$add-file-offset-y: 0px;
$add-file-width: 160px;
$add-file-height: 181px;
$add-file-total-width: 240px;
$add-file-total-height: 181px;
$add-file-image: '~sprite.png';
$add-file: (0px, 0px, 0px, 0px, 160px, 181px, 240px, 181px, '~sprite.png', 'add-file', );
$blue-lamp-name: 'blue-lamp';
$blue-lamp-x: 160px;
$blue-lamp-y: 132px;
$blue-lamp-offset-x: -160px;
$blue-lamp-offset-y: -132px;
$blue-lamp-width: 28px;
$blue-lamp-height: 22px;
$blue-lamp-total-width: 240px;
$blue-lamp-total-height: 181px;
$blue-lamp-image: '~sprite.png';
$blue-lamp: (160px, 132px, -160px, -132px, 28px, 22px, 240px, 181px, '~sprite.png', 'blue-lamp', );
$light-logo-name: 'light-logo';
$light-logo-x: 160px;
$light-logo-y: 72px;
$light-logo-offset-x: -160px;
$light-logo-offset-y: -72px;
$light-logo-width: 60px;
$light-logo-height: 60px;
$light-logo-total-width: 240px;
$light-logo-total-height: 181px;
$light-logo-image: '~sprite.png';
$light-logo: (160px, 72px, -160px, -72px, 60px, 60px, 240px, 181px, '~sprite.png', 'light-logo', );
$pink-lamp-name: 'pink-lamp';
$pink-lamp-x: 188px;
$pink-lamp-y: 132px;
$pink-lamp-offset-x: -188px;
$pink-lamp-offset-y: -132px;
$pink-lamp-width: 28px;
$pink-lamp-height: 22px;
$pink-lamp-total-width: 240px;
$pink-lamp-total-height: 181px;
$pink-lamp-image: '~sprite.png';
$pink-lamp: (188px, 132px, -188px, -132px, 28px, 22px, 240px, 181px, '~sprite.png', 'pink-lamp', );
$template-logo-name: 'template-logo';
$template-logo-x: 160px;
$template-logo-y: 0px;
$template-logo-offset-x: -160px;
$template-logo-offset-y: 0px;
$template-logo-width: 80px;
$template-logo-height: 72px;
$template-logo-total-width: 240px;
$template-logo-total-height: 181px;
$template-logo-image: '~sprite.png';
$template-logo: (160px, 0px, -160px, 0px, 80px, 72px, 240px, 181px, '~sprite.png', 'template-logo', );
$spritesheet-width: 240px;
$spritesheet-height: 181px;
$spritesheet-image: '~sprite.png';
$spritesheet-sprites: ($add-file, $blue-lamp, $light-logo, $pink-lamp, $template-logo, );
$spritesheet: (240px, 181px, '~sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
